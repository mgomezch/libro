#LyX 2.0 created this file. For more info see http://www.lyx.org/
\lyxformat 413
\begin_document
\begin_header
\textclass book
\use_default_options true
\maintain_unincluded_children false
\language spanish
\language_package default
\inputencoding auto
\fontencoding global
\font_roman default
\font_sans default
\font_typewriter default
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100

\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\float_placement h
\paperfontsize 12
\spacing onehalf
\use_hyperref false
\papersize letterpaper
\use_geometry true
\use_amsmath 1
\use_esint 1
\use_mhchem 1
\use_mathdots 1
\cite_engine basic
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\use_refstyle 1
\index Index
\shortcut idx
\color #008000
\end_index
\leftmargin 3cm
\topmargin 2cm
\rightmargin 2cm
\bottommargin 2cm
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Chapter
Desarrollo
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
thispagestyle{empty} 
\end_layout

\end_inset


\end_layout

\begin_layout Standard
A continuación, se expone detalladamente el proceso de desarrollo del sistema.
 Se describe, de manera amplia y específica, cada una de las actividades
 programadas para cada una de las fases del proyecto, haciendo énfasis en
 los aspectos importantes, tanto de diseño, como de implementación, además
 de detalles técnicos de interés.
 Esta exposición está estructurada en base a las fases definidas en el marco
 metodológico.
 
\end_layout

\begin_layout Section
Inicio
\end_layout

\begin_layout Standard
En esta fase, se debe determinar los requerimientos específicos que formarán
 parte del sistema, por lo tanto, es imprescindible que las primeras actividades
 estén relacionadas a la familiarización con los conceptos y actividades
 manejados en la empresa, qué procesos se siguen para la realización de
 las actividades y operaciones a atender, y los recursos con los que se
 cuenta en la actualidad.
 También, es de interés determinar qué efecto genera el desarrollo del proyecto
 en las actividades de la empresa.
 Esta fase se ejecutó en una sola iteración.
\end_layout

\begin_layout Subsection
Estudio de los sistemas existentes en la empresa.
\end_layout

\begin_layout Standard
Esta actividad es de gran importancia, pues permite conocer, tanto de manera
 técnica, como operacional, qué procesos se atienden en la empresa y si
 alguno de éstos es de interés para formar parte o trabajar en conjunto
 con las actividades que se desarrollan en el proyecto.
 Sabiendo ésto, se decide evaluar los sistemas que, a juicio de la empresa,
 deben interactuar con la aplicación a desarrollar.
\end_layout

\begin_layout Standard
En la empresa, se encuentrar implantados dos sistemas básicos que atienden
 dos procesos importantes para el negocio de la misma:
\end_layout

\begin_layout Itemize
En el entorno de Venelab, se encuentra en funcionamiento un sistema de Gestión
 de Citas de Laboratorio, encargado manejar las operaciones de solicitud
 de citas, permitiendo a los usuarios conocer los horarios disponibles y
 hacer citas vía web.
\end_layout

\begin_layout Itemize
En el entorno de Venemergencia, se tiene desarrollado un sistema de Gestión
 de Ambulancias, que permite el control de las unidades, dando información
 sobre el estado de las mismas, si están operativas o no, además de dar
 información al operador de la aplicación si existen solicitudes de traslados
 activos, en espera.
\end_layout

\begin_layout Standard
\paragraph_spacing onehalf
\begin_inset space ~
\end_inset


\end_layout

\begin_layout Standard
Para los objetivos de la aplicación de gestión de consultas médicas, a desarroll
ar en este proyecto de pasantías, se determinó que sólo era relevante la
 interacción con el sistema de solicitud de citas de laboratorio, Venelab,
 para permitir realizar solicitudes de citas para la realización de exámenes,
 en las instalaciones de la empresa.
\end_layout

\begin_layout Standard
En un principio, se concibió interacción directa con este sistema, en la
 que el usuario pudiera realizar las operaciones que se podían ejecutar
 a través del sistema de citas de laboratorio, utilizando el sistema de
 consultas médicas, sin embargo, debido a decisiones de negocio y usabilidad,
 esta primera aproximación a lo que se debía realizar, fue reconsiderada.
 
\end_layout

\begin_layout Standard
Primordialmente, este cambio se debe a dos condiciones:
\end_layout

\begin_layout Itemize
Primero, por cuestión de practicidad, concibiendo en el nuevo sistema de
 consultas médicas como primordial la mejora del uso del tiempo en la atención
 de consultas, hacer que el médico deba realizar tareas de concertación
 de citas y verificación de horarios era poco acertado.
 
\end_layout

\begin_layout Itemize
También, se está planificando una reestructuración de los sistemas empleados
 para la gestión de las actividades de gestión de citas de laboratorio,
 por lo tanto, invertir tiempo en una posible aplicación a ser descartada
 o modificada se consideró inconveniente.
\end_layout

\begin_layout Subsection
Revisión inicial de los requerimientos del sistema.
\end_layout

\begin_layout Standard
En conjunto con los directores de Venemergencia y Venetecnología, se determinaro
n las primeras necesidades que debe atender la aplicación.
 Es vital definir que requerimientos funcionales debe cubrir el sistema.
 
\end_layout

\begin_layout Standard
Las necesidades detectadas en esta actividad representan la visión inicial
 del sistema.
 Ésta se profundiza en el Documento Visión del Sistema, anexo en el Apéndice
 
\begin_inset CommandInset ref
LatexCommand ref
reference "chap:Documento-Visión"

\end_inset

.
\end_layout

\begin_layout Standard
Se requiere una aplicación web que permita a los médicos gestionar consultas
 médicas de sus pacientes.
 El objetivo principal de la aplicación, es agilizar y mejorar los tiempos
 de realización de consultas médicas.
 También, es importante la recolección de la información de las consultas
 médicas realizadas, de forma persistente, lo que permitirá a los médicos
 tener a la mano todo el historial clínico del paciente.
\end_layout

\begin_layout Standard
La finalidad de que esta aplicación sea realizada en un ambiente web, es
 simplificar el acceso, tanto a médicos como pacientes, de la misma, evitando
 inconvenientes de instalación y configuración, que no son necesarios, pues
 sólo se requiere de un navegador para acceder a la misma.
\end_layout

\begin_layout Standard
Esta aplicación debe permitir el registro de antecedentes y hábitos de los
 pacientes, con la finalidad de mantener éstos como un registro permanente
 y actualizable, que permita a los médicos evitar la solicitud de información
 conocida en pacientes que ya han sido atendidos con el sistema.
\end_layout

\begin_layout Standard
Es fundamental, el desarrollo de un módulo de gestión de pacientes, que
 permita agregarlos al sistema, y que a su vez, los pacientes sean usuarios
 del sistema, para que puedan acceder a los resúmenes de las consultas propias
 y descargarlos o imprimirlos desde cualquier lugar con acceso a internet.
 También es importante que se pueda gestionar usuarios médico-administrativos
 a la aplicación, que son los que la utilizarán para creación de consultas
 y desarrollo de otras tareas.
\end_layout

\begin_layout Standard
Uno de los requerimientos que se solicitó, es que se definiera un sistema
 de permisologías por tipo de usuario, que habilite ciertas operaciones
 y bloquee otras, dependiendo del usuario que accede a la aplicación.
\end_layout

\begin_layout Standard
También es necesario permitir el registro de resultados de exámenes médicos,
 funcionales, físicos y paraclínicos, para asociarlos a una consulta.
\end_layout

\begin_layout Standard
Otro de los requerimientos es la generación de documentos imprimibles para
 informes médicos de las consultas y para las interconsultas solicitadas,
 con la información del paciente y los datos de las consultas automáticamente
 cargada en los mismos, para agilizar esta tarea, que actualmente es realizada
 a mano en un procesador de texto.
\end_layout

\begin_layout Standard
Por último, es importante establecer un medio para solicitar citas de laboratori
o, en la empresa Venelab.
\end_layout

\begin_layout Subsection
Familiarización con los conceptos del negocio.
\end_layout

\begin_layout Standard
En esta etapa, era importante conocer qué conceptos se manejaban en la empresa,
 que formaban parte de las necesidades requeridas para la aplicación.
 Esto se realizó mediante reuniones con los médicos y directores de Venemergenci
a A.G., en las que se aclararon muchos de los conceptos y dudas existentes
 sobre ellos.
 Gran parte de estos conceptos, están definidos en la sección de Conceptos
 Básicos, presente en el marco teórico.
\end_layout

\begin_layout Subsection
Definición de las tecnologías y herramientas a utilizar para el desarrollo
 del proyecto.
\end_layout

\begin_layout Standard
Para el desarrollo de este proyecto, se buscó utilizar tecnologías que cumpliera
n con las siguientes características:
\end_layout

\begin_layout Enumerate
Ser tecnologías con una curva de aprendizaje que no retrasara en gran medida
 los plazos establecidos para el desarrollo de las actividades, en vista
 de la duración de veinte (20) semanas del proyecto de pasantías.
\end_layout

\begin_layout Enumerate
Que permitan el funcionamiento del sistema a desarrollar en ambientes multiplata
forma.
\end_layout

\begin_layout Enumerate
Ser tecnologías que, en la medida de lo posible, simplifiquen el trabajo
 del programador, abstrayendo tareas repetitivas mediante funciones de alto
 nivel.
\end_layout

\begin_layout Enumerate
La existencia de una comunidad de desarrolladores, dedicada al mantenimiento
 y mejora de la misma, con el objetivo de resolver problemas y errores del
 mismo y agregar nuevas características, para garantizar la mantenibilidad
 y extensibilidad del software desarrollado.
\end_layout

\begin_layout Enumerate
Ser tecnologías que posean esquemas de licencias libres.
\end_layout

\begin_layout Standard
\begin_inset space ~
\end_inset


\end_layout

\begin_layout Standard
En base a estos parámetros, se decide emplear las siguientes tecnologías:
\end_layout

\begin_layout Itemize

\series bold
MySQL:
\series default
 Manejador de bases de datos (
\shape italic
database management system
\shape default
 o DBMS) relacional, multihilo y multiusuario, propiedad de Sun Microsystems,
 que a su vez es propiedad de Oracle Corporation, 
\begin_inset Quotes eld
\end_inset

caracterizado por su alto rendimiento, confiabilidad y facilidad de uso
\begin_inset Quotes erd
\end_inset


\begin_inset space ~
\end_inset


\begin_inset CommandInset citation
LatexCommand cite
key "MYSQL"

\end_inset

.
 Es multiplataforma, lo que garantiza su operatividad en gran cantidad de
 sistemas y equipos, y además, ofrece gran cantidad de herramientas, y al
 ser uno de los DBMS más utilizados, tiene una gran comunidad que proporciona
 soporte para su uso.
 MySQL se desarrolla como software libre en un esquema de licenciamiento
 dual, existiendo tanto un esquema de licenciamiento GNU GPL, como un licenciami
ento privativo.
\end_layout

\begin_layout Itemize

\series bold
CakePHP 1.3:
\series default
 
\shape italic
framework
\shape default
 de PHP libre, de código abierto, destinado al desarrollo de aplicaciones
 Web de manera rápida.
 Se caracteriza por su fácil instalación, bajos requerimientos de configuración.
 Sigue una arquitectura MVC, es compatible con PHP4 y PHP5.
 Simplifica las tareas de conexión con la base de datos, y facilita las
 consultas, mediante el uso de funciones de alto nivel, que además, proveen
 aspectos de seguridad (como protección contra Inyección SQL o 
\shape italic
SQL Injection
\shape default
).
 También, posee una comunidad activa, que desarrolla continuamente nuevas
 extensiones para simplificar tareas de uso común.
 El framework CakePHP 
\begin_inset Quotes eld
\end_inset

puede manejar cualquier aspecto, desde la solicitud inicial del usuario
 hasta el renderizado final de la página web
\begin_inset Quotes erd
\end_inset


\begin_inset space ~
\end_inset


\begin_inset CommandInset citation
LatexCommand cite
key "PrincipiosCake"

\end_inset

.
\end_layout

\begin_layout Itemize

\series bold
Apache Web Server:
\series default
 servidor web HTTP de código abierto, multiplataforma, utilizado para ejecutar
 las pruebas de la aplicación.
 Se empleó XAMPP, una aplicación de sencilla configuración, para instalar
 MySQL, Apache, PHP en cualquier plataforma.
\end_layout

\begin_layout Itemize

\series bold
Manejo de control de versiones Mercurial:
\series default
 empleado para mantener un control sobre los avances del desarrollo de la
 aplicación, manteniendo, además, un respaldo de los archivos, en caso de
 ocurrir algún problema de pérdida de datos, o errores en la aplicación.
 Para el manejo de versiones, se utilizó el servicio de alojamiento basado
 en web, Bitbucket.
\end_layout

\begin_layout Itemize

\series bold
jQuery:
\series default
 es una librería de Javascript, que se emplea para 
\begin_inset Quotes eld
\end_inset

simplificar la interacción con elementos HTML, manejo de eventos, desarrollo
 de animaciones
\begin_inset Quotes erd
\end_inset


\begin_inset space ~
\end_inset


\begin_inset CommandInset citation
LatexCommand cite
key "jQuery"

\end_inset

 y utilización de AJAX para la comunicación asíncrona con el servidor.
 Ofrece funcionalidades de Javascript, que de ser desarrolladas sin el uso
 de estas librerías, requieren mucho más código, por lo que facilita el
 desarrollo al programador, y le ahorra tiempo.
 jQuery es software libre y de código abierto, basado en la licencia MIT
 y GNU GPL.
\end_layout

\begin_layout Section
Elaboración
\end_layout

\begin_layout Standard
En esta fase, una de las actividades más importantes a realizar consiste
 en refinar los requerimientos del sistema, a partir de la construcción
 de documentos formales que contengan especificados cada una de las funcionalida
des que debe ejecutar el mismo.
 Ésto permite determinar el alcance real del proyecto.
 Esta fase se desarrolló en una sola iteración.
 A continuación, se presentan las actividades desarrolladas en la fase de
 
\shape slanted
Elaboración
\shape default
.
\end_layout

\begin_layout Subsection
Formalización y refinamiento de los requerimientos funcionales del sistema
\end_layout

\begin_layout Standard
A través de la construcción del documento ERS, se especificó detalladamente
 cada uno de los requerimientos de manera formal.
 En este documento también se encuentran plasmados los casos de uso asociados
 a cada uno de los requerimientos funcionales.
 En definitiva, este muestra qué acciones y tareas deben poderse realizar
 con el sistema al final de su desarrollo.
 En el Apéndice 
\begin_inset CommandInset ref
LatexCommand ref
reference "chap:Especificación-de-Requerimientos"

\end_inset

, se detalla el documento de Especificación de Requerimientos de Software
 generado.
\end_layout

\begin_layout Standard
Se definieron diez (10) requerimientos funcionales para la aplicación de
 gestión de consultas médicas.
 Los requerimientos funcionales deteminados en esta fase son:
\end_layout

\begin_layout Itemize
Registrar pacientes en el sistema.
\end_layout

\begin_layout Itemize
Guardar Historial de Consultas Médicas para cada paciente.
\end_layout

\begin_layout Itemize
Generar reportes estadísticos de patologías recurrentes.
\end_layout

\begin_layout Itemize
Prescribir medicamentos a los pacientes.
\end_layout

\begin_layout Itemize
Registrar información de exámenes médicos y de laboratorio.
\end_layout

\begin_layout Itemize
Permitir solicitud de citas de laboratorio en Venelab, desde una consulta
 en desarrollo.
 
\end_layout

\begin_layout Itemize
Generar reportes de consultas médicas.
\end_layout

\begin_layout Itemize
Generar Interconsulta.
\end_layout

\begin_layout Itemize
Añadir antecedentes médicos de los pacientes.
\end_layout

\begin_layout Itemize
Registrar Médicos en el Sistema.
\end_layout

\begin_layout Standard
\begin_inset space ~
\end_inset


\end_layout

\begin_layout Standard
Al conocerse estos requerimientos, se determinó los casos de uso a implementar,
 para hacer efectivo el cumplimiento de los mismos.
 Se determinaron veinte (20) casos de uso a implementar.
 A continuación, en la Figura 4.1, se muestra un diagrama de casos de uso,
 con cada uno de los usuarios del sistema y las funcionalidades con las
 que están relacionados.
\end_layout

\begin_layout Standard
\align center
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename CasosUsoSistema2.png
	scale 32

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Diagrama de Casos de Uso del Sistema.
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Definición de los componentes y subcomponentes del sistema
\end_layout

\begin_layout Standard
En esta etapa, se debe determinar la estructura de la aplicación.
 En base a los requerimientos formales definidos, se determina que los component
es del sistema son:
\end_layout

\begin_layout Itemize

\series bold
Módulo para gestión de pacientes:
\series default
 Integra todas las operaciones de creación, modificación y gestión de pacientes.
\end_layout

\begin_layout Itemize

\series bold
Módulo para gestión de usuarios médico-administrativos:
\series default
 Integra todas las operaciones de creación, modificación y gestión de usuarios
 del sistema.
\end_layout

\begin_layout Itemize

\series bold
Módulo para gestión de consultas médicas:
\series default
 Incluye todo lo relacionado al inicio y la gestión de una consulta médica,
 y a la visualización y/o edición de consultas médicas previamente existentes.
\end_layout

\begin_layout Itemize

\series bold
Módulo para visualización de reportes sobre patologías recurrentes:
\series default
 Corresponde a las operaciones para visualizar gráficamente reportes acerca
 de las patologías recurrentes en las consultas médicas.
\end_layout

\begin_layout Standard
\begin_inset space ~
\end_inset


\end_layout

\begin_layout Subsection
Diseño y elaboración del Modelo de Datos del sistema
\end_layout

\begin_layout Standard
El sistema debe interactuar con la aplicación de consultas médicas, vía
 celular, ContactaMed, por lo tanto, se realizó un diseño en conjunto del
 modelo de datos a utilizar para ambas aplicaciones.
 
\end_layout

\begin_layout Standard
En principio, se contaba con un modelo de datos básico, que recogía la informaci
ón básica de una consulta médica y su asociación con los pacientes.
 En MySQL, existía un modelo de datos, con las tablas 
\shape slanted
consultas
\shape default
, 
\shape slanted
paciente
\shape default
, 
\shape slanted
habitos
\shape default
, 
\shape slanted
antecedentes_medicos
\shape default
.
 Este modelo de datos debió ampliarse para permitir registrar con mayor
 detalle la información requerida en una consulta médica.
\end_layout

\begin_layout Standard
Se agregaron nuevas tablas para contener la información específica sobre
 los exámenes, servicios, diagnósticos, interconsultas y toda la información
 relevante en la consulta.
 Las tablas incorporadas son: 
\shape slanted
antecedentes_medicos
\shape default
, 
\shape slanted
archivos_paraclinicos
\shape default
, 
\shape slanted
atiende_pacientes
\shape default
, 
\shape slanted
consultas
\shape default
, 
\shape slanted
consulta_tipos
\shape default
, 
\shape slanted
diagnosticos
\shape default
, 
\shape slanted
diagnosticos_lista
\shape default
, 
\shape slanted
especialidades
\shape default
, 
\shape slanted
examenes_fisicos
\shape default
, 
\shape slanted
examenes_funcionales
\shape default
, 
\shape slanted
examenes_paraclinicos
\shape default
, 
\shape slanted
habitos
\shape default
, 
\shape slanted
interconsultas
\shape default
, 
\shape slanted
paciente
\shape default
, 
\shape slanted
pasos_finales
\shape default
, 
\shape slanted
perfiles_solicitados
\shape default
, 
\shape slanted
servicios
\shape default
, 
\shape slanted
tipo_diagnostico
\shape default
, 
\shape slanted
tratamientos
\shape default
, 
\shape slanted
tratamientos_lista
\shape default
, 
\shape slanted
usuario_datos
\shape default
.
 Además, se incorporaron tablas para representar los diferentes tipos de
 usuario (
\shape slanted
groups
\shape default
); el esquema de Lista de Control de Acceso (
\shape slanted
Access Control List
\shape default
 o ACL) con las tablas
\shape slanted
 acos
\shape default
, 
\shape slanted
aros
\shape default
, 
\shape slanted
aros_acos
\shape default
; y los datos de sesión de usuario de forma separada a los datos personales
 utilizando la tabla 
\shape slanted
sesion_usuarios
\shape default
.
 En total, se agregaron veinticinco (25) tablas al modelo de datos previo.
\end_layout

\begin_layout Standard
Estas nuevas tablas se incorporaron al modelo de datos, algunas bajo una
 concepción inicial del sistema, y otras que fueron identificadas como necesaria
s a medida que se iban necesitando, en el desarrollo de cada una de las
 iteraciones de la fase de Construcción.
\end_layout

\begin_layout Standard
A continuación, se presenta una tabla con cada una de las entidades del
 modelo de datos y su descripción (Cuadro 4.1).
\end_layout

\begin_layout Standard
\align center
\begin_inset Float table
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Entidades del modelo de datos del sistema.
\end_layout

\end_inset


\end_layout

\end_inset


\begin_inset Tabular
<lyxtabular version="3" rows="27" columns="2">
<features islongtable="true" longtabularalignment="center">
<column alignment="center" valignment="top" width="0pt">
<column alignment="center" valignment="top" width="11cm">
<row endhead="true" endfirsthead="true">
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
\size footnotesize
Modelo
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
\size footnotesize
Descripción
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
acos
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
Representa los objetos que se quieren controlar por los usuarios, es decir,
 las operaciones que se pueden ejecutar en el sistema.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
antecedentes_medicos
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
Representa la información de antecedentes médicos de un paciente.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
archivos_paraclinicos
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
Representa los archivos que se cargan en una consulta.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
aros
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
Representa los objetos que requieren el control de alguna operación del
 sistema, o usuarios.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
aros_acos
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
Relación entre objetos acos y aros, define que permisos tienen los usuarios
 sobre las operaciones.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
atiende_pacientes
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
Representa la relación entre un paciente y un médico que lo atiende.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
consultas
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
Representa la información básica de una consulta médica.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
consulta_tipos
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
Representa los tipos de consulta realizables mediante el sistema.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
diagnosticos
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
Representa los diagnósticos determinados en una consulta de un paciente.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
diagnosticos_lista
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
Representa la lista de posibles diagnósticos asignables en una consulta
 a un paciente.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
especialidades
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
Representa la lista de especialidades que un médico puede desempeñar.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
examenes_fisicos
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
Representa un examen físico asociado a una consulta.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
examenes_funcionales
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
Representa un examen funcional asociado a una consulta.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
examenes_paraclinicos
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
Representa un examen paraclínico asociado a una consulta.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
groups
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
Representa la lista tipos de usuarios disponibles en el sistema.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
habitos
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
Representa los hábitos asociados a un paciente.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
interconsultas
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
Representa las interconsultas solicitadas a un paciente en una consulta.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
paciente
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
Representa los datos personales de un paciente registrado en el sistema.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
pasos_finales
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
Representa la información de cierre de consulta, conteniendo reposos, recomendac
iones y conclusiones.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
perfiles_solicitados
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
Representa los exámenes y perfiles de laboratorio solicitados para ser realizado
s en Venelab.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
servicios
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
Representa los servicios prestados al paciente durante una consulta.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
sesion_usuarios
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
Representa los datos de inicio de sesión de un usuario del sistema.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
tipo_diagnostico
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
Representa la lista de los sistemas físicos a los que pertenecen los diagnóstico
s.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
tratamientos
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
Representa los tratamientos indicados a un paciente en una consulta.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
tratamientos_lista
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
Representa la lista de tratamientos que pueden ser indicados a los pacientes.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
usuario_datos
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
Representa los datos personales de los usuarios del sistema que no son pacientes.
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
En el Apéndice 
\begin_inset CommandInset ref
LatexCommand ref
reference "chap:Modelo-de-Datos"

\end_inset

, se muestra el diagrama Entidad - Relación del Sistema, detallando cada
 una de las tablas y sus atributos.
\end_layout

\begin_layout Subsection
Adiestramiento en las herramientas de programación.
\end_layout

\begin_layout Standard
Se dedicó tiempo al adiestramiento y aprendizaje de las herramientas y tecnologí
as a emplear en el desarrollo del sistema, especialmente en las siguientes
 tecnologías:
\end_layout

\begin_layout Subsubsection
Adiestramiento en PHP.
\end_layout

\begin_layout Standard
Inicialmente, no se había determinado el uso de un 
\shape slanted
framework
\shape default
 en la aplicación para aligerar la carga sobre el desarrollador, por lo
 que se invirtió tiempo en la utilización de PHP como lenguaje a nivel del
 servidor para desarrollar la lógica de la aplicación.
 Se utilizaron los manuales y la documentación existentes en la página oficial
 de PHP.
 Luego, al decidirse utilizar un 
\shape slanted
framework
\shape default
, esta preparación fue de utilidad, debido a que se seleccionó CakePHP,
 basado en PHP, lo que permitió el conocimiento de las funciones y operaciones
 disponibles en el lenguaje, facilitando la adaptación al mismo.
\end_layout

\begin_layout Subsubsection
Adiestramiento en CakePHP.
\end_layout

\begin_layout Standard
Después de determinar la utilización de este framework, se dedicó parte
 del tiempo en el aprendizaje de la filosofía de CakePHP, y el uso de las
 facilidades que provee al desarrollador.
 Se empleó para esta labor la documentación presente en el sitio oficial
 de CakePHP
\begin_inset space ~
\end_inset


\begin_inset CommandInset citation
LatexCommand cite
key "Cake1.3Api"

\end_inset

 y el Libro de Recetas (
\shape slanted
Cookbook
\shape default
) de CakePHP
\begin_inset space ~
\end_inset


\begin_inset CommandInset citation
LatexCommand cite
key "Cookbook"

\end_inset

, también disponible en el sitio.
 
\end_layout

\begin_layout Subsubsection
Adiestramiento con jQuery.
\end_layout

\begin_layout Standard
Se decidió utilizar jQuery, 
\shape slanted
framework
\shape default
 de Javascript, debido a la gran cantidad de scripts a desarrollar para
 las funcionalidades asíncronas al utilizar la técnica AJAX, además, para
 la generación de contenidos dinámicamente, que mediante Javascript solamente,
 sería más complicado y requeríria mucho mayor tiempo de programación.
 Se empleó la documentación de jQuery existente en el sitio oficial de la
 herramienta.
\end_layout

\begin_layout Section
Construcción
\end_layout

\begin_layout Standard
Esta fase comprendió casi la totalidad del desarrollo del proyecto de pasantías.
 En ésta, se inicia la implementación de los casos de uso definidos en la
 fase de Elaboración.
 Por utilizarse una metodología como AUP, esta fase se desarrolló de manera
 iterativa, produciendo versiones parciales funcionales de cada una de las
 operaciones descritas para el sistema.
\end_layout

\begin_layout Standard
Se dividió en tres iteraciones, correspondientes a cada uno de los componentes
 principales de la aplicación.
 La construcción se llevó a cabo de la siguiente manera:
\end_layout

\begin_layout Subsection
Primera Iteración: Gestión de Usuarios del Sistema
\end_layout

\begin_layout Standard
Esta iteración se enfoca en todas las actividades relacionadas al manejo
 de usuarios en el sistema, su creación, modificación y permisos de acceso.
 
\end_layout

\begin_layout Subsubsection
Diseño e implementación de módulo de registro de pacientes.
\end_layout

\begin_layout Standard
Se requiere la gestión de pacientes, los usuarios que serán consultados
 por los médicos, por lo tanto era primordial el diseño de un módulo que
 permitiera el ingreso de nuevos pacientes al sistema.
 Se diseñó un formulario que recogiera la información de pacientes, que
 ya estaba determinada en el modelo de datos preexistente.
 La información solicitada corresponde a: cédula, nombres, apellidos, teléfonos,
 correo electrónico, sexo, tipo de sangre, lateralidad (diestro, zurdo,
 ambidiestro).
 Se diseñaron dos plantillas similares, una para el personal médico, que
 requiera registrar un paciente que no esté presente en el sistema, y la
 otra para el uso de pacientes, que quieran registrarse a si mismos como
 usuarios.
 La diferencia entre ambas plantillas está en que al registrarse uno mismo,
 tiene la posibilidad de seleccionar su contraseña de ingreso, pero al ser
 registrado por un usuario médico-administrativo, se le asigna una contraseña
 automáticamente, la cual podrá ser modificada por el propio paciente, si
 así lo desea.
\end_layout

\begin_layout Standard
En la Figura 4.2 se muestra una captura del formulario de registro de pacientes,
 para médicos.
 Véase que no se solicita la contraseña del usuario a registrar.
\end_layout

\begin_layout Standard
\align center
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename Imagenes Expo/RegistroPacienteMedico.png
	lyxscale 30
	scale 30

\end_inset


\begin_inset Caption

\begin_layout Plain Layout
Formulario de Registro de Pacientes por el Médico.
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
En la Figura 4.3 se muestra una captura del formulario de registro de pacientes,
 por el mismo paciente.
 Véase que A diferencia de la Figura 4.2, se solicita la contraseña del usuario
 a registrar.
\end_layout

\begin_layout Standard
\align center
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename Imagenes Expo/RegistroPacientes.png
	lyxscale 30
	scale 27

\end_inset


\begin_inset Caption

\begin_layout Plain Layout
Formulario de Registro de Pacientes por el mismo usuario.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
Diseño e implementación de módulo de registro de usuarios médicos y administrati
vos.
\end_layout

\begin_layout Standard
El sistema requiere el registro de usuarios médico-administrativos del sistema.
 A diferencia de los pacientes, que pueden registrarse ellos mismos, estos
 usuarios deben ser registrados por un Administrador del sistema.
 Sin embargo, la planilla diseñada para recolectar los datos es similar
 a la utilizada para la creación de pacientes.
\end_layout

\begin_layout Standard
Se registra la siguiente información sobre cada usuario: cédula, nombres,
 apellidos, teléfonos, correo electrónico, nombre de usuario, tipo de usuario,
 número de sanidad e inpsasel, estos últimos solo si aplican para el tipo
 de usuario.
\end_layout

\begin_layout Standard
En la Figura 4.4 se muestra una captura del formulario de registro de pacientes.
 Véase que el formulario permite el ingreso de un nombre de usuario o Login
 para el mismo.
\end_layout

\begin_layout Standard
\align center
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename Imagenes Expo/RegistroUsuarios.png
	lyxscale 30
	scale 30

\end_inset


\begin_inset Caption

\begin_layout Plain Layout
Formulario de Registro de Usuarios Médico-Administrativos.
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
Desarrollo de módulo de gestión de pacientes y usuarios médico-administrativos.
\end_layout

\begin_layout Standard
La información de los usuarios del sistema debe ser editable, por lo tanto,
 se diseñaron operaciones para la modificación de estos datos.
 Se desarrolló un formulario para búsqueda de pacientes, que permite filtrarlos
 basado en su información personal.
\end_layout

\begin_layout Standard
A continuación, se presenta el formulario de búsqueda de pacientes (Figura
 4.5).
\end_layout

\begin_layout Standard
\align center
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename img/BusquedaPaciente.png
	lyxscale 30
	scale 30

\end_inset


\begin_inset Caption

\begin_layout Plain Layout
Formulario de Búsqueda de Pacientes.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
En la figura 4.6, se muestra el formulario de edición de datos de usuario.
\end_layout

\begin_layout Standard
\align center
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename Imagenes Expo/EdicionUsuarios.png
	lyxscale 30
	scale 30

\end_inset


\begin_inset Caption

\begin_layout Plain Layout
Formulario de Edición de Datos de Usuario.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
Módulo de inicio de sesión de usuarios.
\end_layout

\begin_layout Standard
Se diseñó un módulo de inicio de sesión de usuarios, en el cual, todos los
 tipos de usuarios ingresaran de la misma manera.
 Se diseñó un formulario sencillo de ingreso de nombre de usuario y contraseña.
 Para los pacientes, su nombre de usuario coincide con su número de cédula
 de identidad, para los demás tipos de usuario, se refiere a una secuencia
 de caracteres alfanumérica, con al menos un caracter alfabético.
\end_layout

\begin_layout Standard
Al ingresar los datos, se verifica si el nombre de usuario y la contraseña
 coinciden con los datos presentes en la tabla 
\shape slanted
sesion_usuarios
\shape default
.
 La contraseña se encuentra cifrada a nivel de base de datos.
 Este cifrado se realiza mediante el algoritmo de SHA-1, con sal (
\shape slanted
salt
\shape default
), este término se refiere al uso de un conjunto de bits aleatorios, utilizados
 como valor de inicialización, que se concatenan con la contraseña seleccionada
 antes de aplicar el cifrado con SHA-1; el componente 
\shape slanted
Auth
\shape default
 de CakePHP realiza esta tarea automáticamente.
 
\end_layout

\begin_layout Standard
Para cada conjunto de usuarios, se definen diferentes vistas dependiendo
 de los permisos que se le concede, según su tipo.
 Al ingresar, se le da acceso a las funcionalidades que tiene permitidas.
 Existen grupos de usuarios que, actualmente no poseen permisos para ninguna
 acción más que la de ingresar al sistema (Enfermero, Paramédico, Recepcionista)
, pero se espera que, a futuro, jueguen un papel activo en la aplicación.
\end_layout

\begin_layout Standard
En la Figura 4.7, se presenta la pantalla de inicio de sesión para usuarios
 del Sistema.
\end_layout

\begin_layout Standard
\align center
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename img/InicioSesion.png
	lyxscale 35
	scale 35

\end_inset


\begin_inset Caption

\begin_layout Plain Layout
Ventana de Inicio de Sesión del Sistema.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
Establecimiento del sistema de Listas de Control de Acceso (
\shape italic
Access Control Lists
\shape default
)
\end_layout

\begin_layout Standard
Luego de garantizar la creación e inicio de sesión de los usuarios, se procedió
 a generar es sistema de gestión de permisos de acciones, mediante la implementa
ción del sistema de Listas de Control de Acceso (ACL, por sus siglas en
 inglés).
 Este sistema está integrado a CakePHP, con el uso del componente ACL.
 
\end_layout

\begin_layout Standard
CakePHP permite utilizar este componente mediante dos implementaciones,
 una basada en un archivo de configuración INI, y otra basada en tablas
 de la base de datos.
 El primer modo es recomendable para aplicaciones sencillas que probablemente
 no requieran utilizar una base de datos.
 El segundo, es el recomendado por los desarrolladores de CakePHP, por permitir
 la creación de nuevos recursos y usuarios de los mismos, desde la aplicación.
\end_layout

\begin_layout Standard
Para la aplicación a desarrollar, se escogió el esquema basado en la base
 de datos.
\end_layout

\begin_layout Standard
Se utiliza creando unas tablas en la base de datos, que contienen los recursos
 que pueden solicitarse o ACO's (
\shape slanted
Access Control Object
\shape default
) contenidos en la tabla 
\shape slanted
acos
\shape default
, los objetos que pueden solicitar el control de algún recurso o ARO's (
\shape slanted
Access Request Object
\shape default
) contenidos en la tabla 
\shape slanted
aros
\shape default
, y las relaciones entre ellos contenidas en la tabla 
\shape slanted
aros_acos
\shape default
.
\end_layout

\begin_layout Standard
CakePHP permite la creación de estas tablas de dos maneras:
\end_layout

\begin_layout Itemize
La primera, mediante la cónsola de CakePHP, utilizando el el siguiente comando:
\end_layout

\begin_deeper
\begin_layout Itemize

\shape slanted
$ cake schema run create DbAcl
\end_layout

\end_deeper
\begin_layout Itemize
La otra manera, es ejecutando un script de SQL, que contiene las tablas
 a ser creadas.
 Este script se encuentra en los archivos de configuración de CakePHP.
\end_layout

\begin_layout Standard
\begin_inset space ~
\end_inset


\end_layout

\begin_layout Standard
Luego de tener las tablas necesarias, se procede a definir los ARO's y ACO's
 de la aplicación.
 Los ARO's se definieron en la tabla 
\shape slanted
groups
\shape default
, que contiene los tipos de usuarios que pertenecen al sistema.
 Se desarrolló una función que se utilizó para crear los ARO's basados en
 los tipos de usuarios contenidos en 
\shape slanted
groups
\shape default
, agregándolos a la tabla 
\shape slanted
aros
\shape default
.
\end_layout

\begin_layout Standard
Luego, se debe construir la tabla 
\shape slanted
acos
\shape default
, para lo cual, se utilizó una función denominada 
\shape slanted
buildAcl()
\shape default
, encontrada en el 
\shape slanted
Cookbook
\shape default
 de CakePHP, y diseñada para tal fin 
\begin_inset CommandInset citation
LatexCommand cite
key "build_Acl"

\end_inset

.
 
\end_layout

\begin_layout Standard
Ya pobladas ambas tablas, se procede a conceder los permisos de utilizar
 los ACO's que requiere cada uno de los ARO's.
 Se utilizan las funciones deny() y allow(), del componente ACL de CakePHP,
 para asignar o denegar permisos de un recurso a un tipo de usuario en particula
r.
\end_layout

\begin_layout Subsubsection
Primera Iteración: Pruebas Unitarias.
\end_layout

\begin_layout Standard
Para cada uno de los módulos desarrollados en esta iteración, se realizaron
 un conjunto pequeño de pruebas para verificar el buen funcionamiento de
 las funcionalidades desarrolladas.
 En los módulos de registro de pacientes y usuarios, y el módulo de gestión
 de usuarios, se realizó treinta (30) inserciones de prueba mediante la
 aplicación, para verificar si los datos se registraban correctamente a
 nivel de datos.
 También, se colocó ciertas restricciones de valores en los campos de los
 formularios, como el login de usuario en caso de no ser paciente, debe
 contener al menos un caracter no-numérico, y se verificó que estas restriccione
s se cumplieran a cabalidad.
\end_layout

\begin_layout Standard
Con el módulo de inicio de sesión, se realizaron pruebas de ingreso al sistema
 utilizando contraseñas erróneas, verficándose que sólo se puede acceder
 como un usuario si se ingresa este valor de manera correcta.
 También, se verificó que el valor de la contraseña cifrada se almacenara
 correctamente.
\end_layout

\begin_layout Standard
En cuanto a las Listas de Control de Acceso, se definieron permisos para
 cierto grupo de usuarios, y luego se intentó acceder tanto a los recursos
 que se permitía acceder, como aquellos que no, verificando que el esquema
 de ACL funcionaba de la manera esperada.
\end_layout

\begin_layout Subsection
Segunda Iteración: 
\series bold
Gestión de Consultas Médicas.
\end_layout

\begin_layout Standard
En esta iteración se tiene como objetivo el desarrollo de todas las actividades
 necesarias para llevar a cabo una consulta médica.
 En esta etapa, se hace visible la necesidad de elementos dinámicos, que
 requieren actualización de datos asíncronamente, por lo tanto se utiliza
 la técnica AJAX, y jQuery, para enviar los datos recogidos en los formularios
 al servidor.
 También, se decidió realizar todas las operaciones realizables en una consulta,
 en una sola vista, y desplegando con jQuery, las secciones de interés,
 mediante la interacción con el menú y los formularios.
\end_layout

\begin_layout Subsubsection
Diseño e implementación de módulo de registro de antecedentes y hábitos.
\end_layout

\begin_layout Standard
Es necesario registrar los antecedentes médicos del paciente, para esto
 se diseñó un formulario con la información referida a los antecedentes
 médicos personales, familiares y los hábitos del paciente.
\end_layout

\begin_layout Standard
La información recogida en este formulario, es almacenada en la base de
 datos, en las tablas
\shape slanted
 antecedentes_medicos
\shape default
 y 
\shape slanted
habitos
\shape default
, en formato JSON (
\shape slanted
Javascript Object Notation
\shape default
).
\end_layout

\begin_layout Standard
En las Figura 4.8 y 4.9, se presentan los formulario de registro de Antecedentes
 Personales y Antecedentes Familiares respectivamente.
\end_layout

\begin_layout Standard
\align center
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename Imagenes Expo/antecedentesPersonales.png
	lyxscale 30
	scale 27

\end_inset


\begin_inset Caption

\begin_layout Plain Layout
Formulario de Antecedentes Personales
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\align center
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename Imagenes Expo/antecedentesFamiliares.png
	lyxscale 30
	scale 27

\end_inset


\begin_inset Caption

\begin_layout Plain Layout
Formulario de Antecedentes Familiares
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset space ~
\end_inset


\end_layout

\begin_layout Standard
Al iniciar una consulta, se verifica si el paciente ya posee datos de antecedent
es médicos, y si es así, estos son cargados en la interfaz de la consulta.
 El médico puede entonces modificarlos si es necesario.
\end_layout

\begin_layout Subsubsection
Diseño e implementación de módulo de prescripción de medicamentos.
\end_layout

\begin_layout Standard
Se debe poder prescribir medicamentos a un paciente.
 Para realizar esta función, se determinó la información importante a indicar
 sobre un tratamiento asignado a un paciente.
 Se requiere indicar qué medicamento o tratamiento se prescribirá, cuál
 es la presentación del medicamento, qué concentración se necesita, qué
 dosis se administrará, la duración del tratamiento y el horario en que
 se debe administrar.
 
\end_layout

\begin_layout Standard
Para indicar esta información, se diseñó un formulario dinámico, al seleccionar
 el campo Tratamiento, se despliega un pop-up que permite escoger uno de
 los tratamientos, luego se van habilitando uno a uno los campos siguientes
 para seleccionar el resto de los datos.
 Al completar un tratamiento, se genera una nueva entrada en el formulario.
 
\end_layout

\begin_layout Standard
En la figura 4.10, se aprecia el formulario dinámico de Tratamientos.
 En la figura 4.11, se presenta el pop-up de búsqueda de tratamientos presentes
 en el sistema.
\end_layout

\begin_layout Standard
\align center
\begin_inset Graphics
	filename Imagenes Expo/tratamientos.png
	lyxscale 30
	scale 26

\end_inset


\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Formulario de Prescripción de Tratamientos.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\align center
\begin_inset Graphics
	filename Imagenes Expo/tratamientosPopUp.png
	lyxscale 30
	scale 26

\end_inset


\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Pop-up de búsqueda de tratamientos en el sistema.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Esto permite agregar diferentes tratamientos en una sola consulta.
 Además, existe una sección para agregar tratamientos que no están almacenados
 entre los seleccionables en la base de datos.
\end_layout

\begin_layout Subsubsection
Construcción de módulo de exámenes funcionales, físicos y paraclínicos.
\end_layout

\begin_layout Standard
Se necesita almacenar información de los exámenes funcionales, físicos y
 paraclínicos que se evaluan en una consulta.
 Para cada tipo de examen, se desarrolló un formulario.
 Estos formularios, son almancenados en la base de datos, en formato JSON,
 el uso de este formato se debe a la variabilidad que es un formato que
 permite agregar nuevas preguntas al formulario, sin requerir modificaciones
 en el modelo de datos, lo que simplifica los posibles cambios a cada uno
 de los exámenes.
 Se determinaron un conjunto de preguntas, cada una numerada con un identificado
r, y luego, se almacenan en la tabla correspondiente.
\end_layout

\begin_layout Standard
A continuación, se presenta el formulario de exámenes funcionales.
 (Figura 4.12).
\end_layout

\begin_layout Standard
\align center
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename Imagenes Expo/funcional.png
	lyxscale 30
	scale 27

\end_inset


\begin_inset Caption

\begin_layout Plain Layout
Formulario de Exámenes Funcionales.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
En la figura 4.13 y 4.14, se observan vistas del formulario de exámenes físicos.
\end_layout

\begin_layout Standard
\align center
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename Imagenes Expo/físico.png
	lyxscale 30
	scale 27

\end_inset


\begin_inset Caption

\begin_layout Plain Layout
Formulario de Exámenes Físicos (Signos Vitales).
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\align center
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename Imagenes Expo/fisico2.png
	lyxscale 30
	scale 27

\end_inset


\begin_inset Caption

\begin_layout Plain Layout
Formulario de Exámenes Físicos (Resto).
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
Construcción de módulo de interconsultas.
\end_layout

\begin_layout Standard
En la consulta médica, es necesario poder referir al paciente a evaluación
 con otro profesional del área de la salud, en caso que sea necesario.
 Para ésto, se diseñó un módulo para interconsultas, que consiste en un
 formulario que genera campos dinámicamente, a medida que se van registrando
 cada una de las interconsultas.
 El médico selecciona la la especialidad de la interconsulta, luego, indica
 el motivo de la misma.
 Al finalizar, se genera automáticamente un nuevo campo de interconsultas,
 en caso de que se requiera agregar otra.
 Para cada interconsulta almacenada, es posible generar un documento imprimible
 en formato PDF, que contenga los datos del paciente, los datos del médico
 que refiere al paciente y la información de la interconsulta requerida.
 Este documento es generado, utilizando una librería escrita en PHP denominada
 TCPDF, la cual es una clase de PHP diseñada para generar documentos en
 formato PDF, desarrollada por Nicola Asuni y publicada en el sitio Web
 del proyecto.
 
\end_layout

\begin_layout Standard
A continuación, se muestra el formulario de interconsultas en la figura
 4.15.
\end_layout

\begin_layout Standard
\align center
\begin_inset Graphics
	filename img/Interconsulta.png
	lyxscale 30
	scale 30

\end_inset


\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Formulario de Interconsultas.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
En la figura 4.16, se presenta una muestra del documento de interconsultas
 generado por el sistema.
\end_layout

\begin_layout Standard
\align center
\begin_inset Graphics
	filename img/DocumentoInter.png
	lyxscale 30
	scale 30

\end_inset


\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Documento PDF de Interconsultas generado por el sistema.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
Diseño e implementación de módulo de solicitud de citas de laboratorio con
 Venelab.
\end_layout

\begin_layout Standard
Uno de los requerimientos más importantes del proyecto, era la posibilidad
 realizar una solicitud de perfiles y exámenes de laboratorio desde una
 consulta médica que está siendo atendida, y comunicar dicha solicitud al
 laboratorio Venelab.
 Para esto, se diseñó un módulo de selección de exámenes y perfiles a solicitar,
 y un sistema de solicitud de citas, utilizando correo electrónico.
\end_layout

\begin_layout Standard
En la Figura 4.17, se presenta el formulario de solicitud de citas de laboratorio.
\end_layout

\begin_layout Standard
\align center
\begin_inset Graphics
	filename img/CitaVenelab.png
	lyxscale 30
	scale 30

\end_inset


\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Formulario de Solicitud de Citas de Laboratorio.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
El médico, selecciona los perfiles a realizar, de manera similar a la selección
 de tratamientos descrita anteriormente, luego, debe consultar al paciente
 si desea que se envíe una solicitud de cita de laboratorio al sistema Venelab.
 Si la respuesta es afirmativa, selecciona la opción de solicitar cita,
 y se enviará un correo electrónico al laboratorio Venelab, que contiene
 la información básica necesaria para contactar al paciente, y además, los
 exámenes y perfiles de laboratorio solicitados por el médico.
 Luego, queda de parte del laboratorio Venelab, contactar al paciente para
 la confirmación de la consulta, y el horario a convenir.
\end_layout

\begin_layout Standard
En la Figura 4.18, se aprecia un ejemplo del correo electrónico recibido
 por Venelab, con la información del paciente y de los exámenes a realizarse.
\end_layout

\begin_layout Standard
\align center
\begin_inset Graphics
	filename img/CorreoSolicitud.png
	lyxscale 30
	scale 30

\end_inset


\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Ejemplo de Correo Electrónico recibido por Venelab.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
Diseño e implementación de módulo de carga de archivos e imágenes.
\end_layout

\begin_layout Standard
Era importante definir un método para almacenar documentos.
 Estos documentos pueden ser exámenes médicos digitalizados, en formatos
 de imagen (jpeg, png, gif) o archivos de texto (pdf).
 Se almacenan en el servidor, pudiendo ser accedidos desde una consulta.
 En la base de datos, se almacenan las url correspondientes a cada archivo,
 y una descripción y observaciones sobre los mismos.
 
\end_layout

\begin_layout Standard
En la Figura 4.19, se presenta una captura del módulo de carga de archivos
 e imágenes.
\end_layout

\begin_layout Standard
\align center
\begin_inset Graphics
	filename Imagenes Expo/ExámenesArchivos.png
	lyxscale 30
	scale 30

\end_inset


\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Módulo de Carga de Archivos e Imágenes.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
Construcción de módulo de diagnósticos.
\end_layout

\begin_layout Standard
En una consulta, se requiere que el médico pueda asignar diagnósticos al
 paciente.
 Para esto se realizó un formulario que permite seleccionar diagnósticos
 que estén presentes en la lista de patologías existentes en la base de
 datos, como tambień, agregar diagnósticos manualmente, en caso de que no
 estén presentes en la lista.
 Se realiza de manera similar a la selección de tratamientos:
\end_layout

\begin_layout Standard
El médico selecciona el campo 
\shape slanted
Patología
\shape default
 del formulario, al hacer esto, se despliega un pop-up, que posee un campo
 de búsqueda para filtrar las patologías y una lista de patologías seleccionable
s.
 Al escoger la patología, se cargan la información de la misma en el formulario
 y se habilita el campo de 
\shape slanted
Especificación
\shape default
, para que el médico pueda agregar detalles de la patología para el paciente.
\end_layout

\begin_layout Standard
A continuación, se muestra el formulario de diagnóstico de patologías.
 (Figura 4.20).
 En la Figura 4.21, se presenta el pop-up de búsqueda de diagnósticos.
\end_layout

\begin_layout Standard
\align center
\begin_inset Graphics
	filename Imagenes Expo/Diagnosticos.png
	lyxscale 30
	scale 25

\end_inset


\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Formulario de Diagnósticos.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\align center
\begin_inset Graphics
	filename Imagenes Expo/DiagnosticoPopup.png
	lyxscale 30
	scale 25

\end_inset


\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Pop-up de búsqueda de diagnósticos.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Si se debe agregar una patología manualmente, se debe dirigir al área de
 
\shape slanted
Otros Diagnósticos
\shape default
, donde se presenta un formulario similar, pero al seleccionar el campo
 de patologías, se puede agregar texto libremente, al hacer ésto, se habilita
 el campo Sistema, para definir a qué sistema físico pertenece la patología,
 y luego se habilita el campo de 
\shape slanted
Especificación.
\end_layout

\begin_layout Subsubsection
Segunda Iteración: Pruebas Unitarias.
\end_layout

\begin_layout Standard
Para esta iteración, se realizó un conjunto de pruebas sencillas, para verificar
 que los módulos desarrollados ejecutan su tarea de la manera esperada.
 En ese sentido, se siguió las siguientes acciones:
\end_layout

\begin_layout Standard
Para las tablas que se almacenan en formato JSON (
\shape slanted
antecedentes_medicos
\shape default
, 
\shape slanted
habitos
\shape default
, 
\shape slanted
examenes_funcionales
\shape default
, examenes_fisicos, examenes_paraclinicos), se realizó pruebas de inserción
 de datos en la base de datos, con la finalidad de verificar que se estuvieran
 almacenando en el formato correcto.
\end_layout

\begin_layout Standard
Algunos campos de los formularios, requerían validaciones y restricciones,
 como los que solo permiten valores numéricos, entre otros.
 Se realizaron validaciones a nivel del cliente y del servidor, y se realizaron
 inserciones para verificar que se cumplían las restricciones.
\end_layout

\begin_layout Standard
En los formularios dinámicos, como el de Diagnósticos o Tratamientos, se
 verificó que cada uno de los diagnósticos ingresados en los formularios
 fuera almancenado en la base de datos, o retornara el error esperado, en
 caso de ocurrir algún problema.
\end_layout

\begin_layout Standard
Para la sección de solicitud de citas de laboratorio, se enviaron gran cantidad
 de solicitudes (entre 25 y 30 solicitudes), con la finalidad de verificar
 que se enviaban correctamente los correos electrónicos, y que además, contenían
 la información necesaria de los pacientes.
\end_layout

\begin_layout Standard
En cuanto a la generación de documentos de interconsultas para su impresión,
 se crearon diferentes interconsultas y se generaron los documentos PDF,
 para verificar si contenían la información correcta del paciente y del
 médico asociados a la misma.
\end_layout

\begin_layout Subsection
Tercera Iteración: 
\series bold
Generación de Reportes y Visualización de Consultas.
\end_layout

\begin_layout Standard
La última iteración corresponde a la generación de informes médicos, reportes
 de patologías recurrentes, y la visualización y edición de las consultas
 existentes en el sistema.
\end_layout

\begin_layout Subsubsection
Diseño e implementación de módulo de Generación de Informes de Consultas.
\end_layout

\begin_layout Standard
Al finalizar una consulta, el médico necesita generar un informe médico,
 con la información recolectada en el desarrollo de la consulta.
 Esta tarea se realizaba manualmente, por el doctor, mediante un procesador
 de texto.
 En la consulta recogía la información, y luego, se redactaban los informes.
 La idea de esta función es automatizar este procedimiento, mediante la
 recopilación de la información obtenida con el sistema, y con esta, construir
 el informe.
 Para la construcción de los informes se emplea la librería TCPDF, utilizada
 previamente para generar los documentos de interconsultas.
\end_layout

\begin_layout Standard
Se solicita la creación del informe, el servidor consulta los datos de la
 consulta, incluyendo datos del paciente, y del médico que la atiende, son
 enviados a una vista en formato JSON o en arreglos de PHP, luego, son procesado
s y se van armando los bloques de información en formato HTML.
 Al final, con las funciones que provee TCPDF para construir los documentos,
 se agrega la información procesada y se genera el archivo PDF.
\end_layout

\begin_layout Standard
A continuación, se aprecia un ejemplo de Informe Médico generado por el
 sistema.
 (Figura 4.22).
\end_layout

\begin_layout Standard
\align center
\begin_inset Graphics
	filename img/InformeGenerado.png
	lyxscale 30
	scale 30

\end_inset


\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Informe Médico Generado por la Aplicación (PDF).
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
Diseño e implementación de módulo de reporte de patologías recurrentes.
\end_layout

\begin_layout Standard
La segunda etapa de la tercera iteración consiste en el desarrollo de un
 módulo de reporte de patologías recurrentes.
 Este módulo debe mostrar de manera visual, utilizando gráficos de barra,
 o de linea, la ocurrencia de patologías.
 Se definieron diversos filtros al momento de realizar las consultas.
 
\end_layout

\begin_layout Standard
Se puede consultar seleccionando o no una patología específica; si no se
 selecciona una patología específica, se retornará la información de la
 ocurrencia de diagnósticos por sistemas en un gráfico de barras; si se
 selecciona una patología, se mostrará la ocurrencia de diagnósticos para
 dicha patología.
\end_layout

\begin_layout Standard
En la Figura 4.23, se muestra el formulario de patologías recurrentes.
\end_layout

\begin_layout Standard
\align center
\begin_inset Graphics
	filename img/FormularioPatologías.png
	lyxscale 30
	scale 27

\end_inset


\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Formulario de Patologías Recurrentes.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Esta información puede filtrarse por edades, existiendo 9 categorías: Recién
 Nacido (0 - 28 días), Lactante Menor (29 días - 12 meses), Lactante Mayor
 (12 - 24 meses), Preescolar (2 - 6 años), Escolar (7 - 11 años), Adolescente
 (12 - 19 años), Adulto Joven (20 - 39 años), Adulto Maduro (40 - 64 años)
 y Adulto Mayor (65 años en adelante).
 También, se pueden aplicar filtros por fecha, por rangos de fechas.
\end_layout

\begin_layout Standard
En la Figura 4.24, se presentan los filtros de búsqueda por edades y sexo,
 para las patologías recurrentes.
\end_layout

\begin_layout Standard
\align center
\begin_inset Graphics
	filename img/PAtologías.png
	lyxscale 30
	scale 27

\end_inset


\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Filtro de búsqueda por rangos de edades y sexo.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Si se selecciona una patología específica, también se puede seleccionar
 como mostrar la información: por meses, trimestres, semestres, años, o
 combinaciones mes/año, trimestre/año, semestre/año.
\end_layout

\begin_layout Standard
Esto se desarrolla utilizando una librería denominada 
\shape slanted
Open Flash Chart
\shape default
 2, que proporciona una interfaz con funciones para generar gráficos estadístico
s en SWF (
\shape slanted
Shockwave Flash
\shape default
), desarrollada en PHP, la cual es software libre bajo la licencia LGPL,
 y un 
\shape slanted
Helper
\shape default
 de CakePHP, que integra las librerías con el 
\shape slanted
framework
\shape default
 utilizado.
\end_layout

\begin_layout Standard
En la Figura 4.25, se presentan diferentes ejemplos de estadísticas mostradas
 por la aplicación, dependiendo de los filtros de búsqueda aplicados en
 la consulta.
\end_layout

\begin_layout Standard
\align center
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename img/Patologia3.png
	lyxscale 30
	scale 23

\end_inset


\begin_inset Graphics
	filename img/Patologias.png
	lyxscale 30
	scale 20

\end_inset


\end_layout

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename img/Patologia2.png
	lyxscale 30
	scale 23

\end_inset


\begin_inset Graphics
	filename Imagenes Expo/RecurreciaAnualMes.png
	lyxscale 30
	scale 23

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Estadísticas de Patologías Generadas por el sistema.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
Construcción de módulo de visualización y edición de consultas previas.
\end_layout

\begin_layout Standard
La última actividad de la tercera iteración contempla el desarrollo de un
 módulo para visualización y edición de consultas previas.
 Este se realiza, básicamente, utilizando una vista similar a la desarrollada
 para la gestión de consultas, luego, se deben cargar todos los datos relacionad
os a la consulta a editar, en los formularios ya existentes.
 En el servidor, se realizan todas las consultas de la base de datos, y
 esos datos se envían a la vista.
 Luego, mediante el uso de jQuery, se rellenan los formularios y se generan
 todos los contenidos dinámicos necesarios.
\end_layout

\begin_layout Standard
En la figura 4.26, se aprecia el inicio del módulo de edición de consultas
 médicas.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename Imagenes Expo/EditarConsulta.png
	scale 35

\end_inset


\begin_inset Caption

\begin_layout Plain Layout
Formulario de Edición de Consultas Médicas
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
Tercera Iteración: Pruebas Unitarias.
\end_layout

\begin_layout Standard
Para finalizar el desarrollo de la aplicación, se aplicó un conjunto de
 pruebas unitarias para verificar el correcto funcionamiento de los módulos
 desarrollados.
 En cuanto a la generación de Informes Médicos, se creó un conjunto de veinte
 (20) consultas médicas, y se verificó que los datos que eran presentados
 en el informe médico, correspondían con los existentes en cada consulta.
 Con respecto a los reportes estadísticos, se realizaron consultas en la
 base de datos a fin de corroborar que los datos retornados gráficamente,
 se correspondían con los filtros utilizados en la búsqueda y con los datos
 presentes en la base de datos.
 
\end_layout

\begin_layout Standard
El módulo de edición y visualización de consultas previas, al ser básicamente,
 una adaptación de los formularios ya existentes para la creación de consultas,
 y que utiliza las mismas funciones para insertar datos en la base de datos,
 sólo requirió probar que los datos cargados en la vista, correspondían
 a los datos presentes asociados a la consulta a modificar.
\end_layout

\begin_layout Section
Transición
\end_layout

\begin_layout Standard
Esta fase comprende la ejecución de pruebas para determinar el correcto
 funcionamiento de la aplicación.
 Estas pruebas tienen como finalidad asegurar la calidad, mediante la búsqueda
 de errores, tanto de programación como de configuración, la validación
 del funcionamiento apropiado del sistema y verificación de que los requerimient
os iniciales fueron satisfechos.
 También comprende la fase de despliege o puesta en producción de la aplicación,
 sin embargo, como se menciona previamente, esta fase no estaba considerada
 como parte del proyecto de pasantías a desarrollar.
\end_layout

\begin_layout Standard
La mayoría de las verificaciones realizadas se relacionaron al modelo de
 datos, verificando que las inserciones en la base de datos se hicieran
 de manera correcta, sobre todo, en las tablas donde se utilizó el formato
 JSON para almacenar los datos.
 También, verificaciones de integridad del funcionamiento de las vistas
 y operaciones del controlador, en caso de variables que no tienen valor,
 o son nulas, o se debe retornar mensajes de error.
\end_layout

\begin_layout Standard
Sin embargo, el sistema actualmente no ha sido sometido a pruebas rigurosas.
 Se espera que estas pruebas se ejecuten al momento de preparar la aplicación
 para ser desplegada o puesta en producción.
\end_layout

\begin_layout Section
Balance Final
\end_layout

\begin_layout Standard
En la construcción de la aplicación, se implementó un conjunto de módulos
 que satisfacen las necesidades detectadas en las fases de Inicio y Elaboración.
 A continuación, se presenta un balance de los mismos.
\end_layout

\begin_layout Standard
En la primera iteración, se desarrollaron cinco (5) actividades relacionadas
 a cuatro (4) módulos, asociados al registro y gestión de usuarios del sistema.
 Estos módulos, cumplen con los casos de uso de 
\shape slanted
Iniciar Sesión, Registrar Médico, Registrar Paciente, Manejar Datos Paciente,
 Consultar Datos Paciente, Modificar Datos Paciente, Autenticar Usuario,
 Registrar Usuario, Cambiar Contraseña y Cerrar Sesión
\shape default
.
 Estos CU se ejecutaron en su totalidad.
\end_layout

\begin_layout Standard
Para la segunda iteración, se implementaron siete (7) módulos, que formaban
 parte de las actividades de gestión de consultas médicas.
 Estos módulos cubren los siguientes casos de uso: 
\shape slanted
Gestionar Consulta, Consultar Historial Médico, Registrar Consulta Médica,
 Prescribir Medicamentos, Añadir Antecedentes, Referir Interconsulta Paciente
 y Solicitar Cita Laboratorio
\shape default
.
 Todos los casos de uso mencionados se ejecutan al 100%, excepto 
\shape slanted
Consultar Historial Personal
\shape default
 y 
\shape slanted
Gestionar Consulta
\shape default
, que requieren la generación de los informes médicos.
 Sin embargo, estas tareas se finalizan en la tercera iteración.
 
\end_layout

\begin_layout Standard
La última iteración comprende tres (3) módulos, que se encargan de las actividad
es de visualización de resultados, reportes estadísticos y generación de
 informes médicos.
 Esta iteración aborda los casos de uso 
\shape slanted
Generar Reportes Estadísticos
\shape default
 y 
\shape slanted
Generar Informe Médico
\shape default
, y además finaliza el desarrollo de 
\shape slanted
Consultar Historial Personal
\shape default
 y 
\shape slanted
Gestionar Consulta.
 
\end_layout

\begin_layout Standard
Se plantearon en principio, veinte (20) casos de uso, y se cumplió con la
 totalidad de los mismos, aún cuando, el objetivo del proyecto de pasantías
 estipulaba un cumplimiento de al menos 80% a nivel de CU.
 
\end_layout

\begin_layout Standard
En la aplicación, se tomaron en cuenta consideraciones de seguridad, para
 evitar el acceso de usuarios no autorizados a operaciones que no le corresponde
n, mediante CakePHP, y sus Componentes 
\shape slanted
Acl
\shape default
 y 
\shape slanted
Auth
\shape default
, los cuales permiten la creación de esquemas de acceso según grupos de
 usuarios, y además, la validación mediante contraseñas con cifrado.
\end_layout

\begin_layout Standard
En el alcance del proyecto, no se contempla el despliege de la aplicación,
 al ser como objetivo de éste, la entrega de un prototipo, 80% funcional.
 Tampoco se incluyó en el alcance del proyecto la implementación de una
 interfaz gráfica definitiva.
\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\end_body
\end_document
